[{"/home/rodrigo-sp17/react/ms-view/src/index.js":"1","/home/rodrigo-sp17/react/ms-view/src/App.js":"2","/home/rodrigo-sp17/react/ms-view/src/reportWebVitals.js":"3","/home/rodrigo-sp17/react/ms-view/src/Home.js":"4","/home/rodrigo-sp17/react/ms-view/src/Calendar.js":"5","/home/rodrigo-sp17/react/ms-view/src/Login.js":"6","/home/rodrigo-sp17/react/ms-view/src/Signup.js":"7","/home/rodrigo-sp17/react/ms-view/src/Shift.js":"8"},{"size":583,"mtime":1611331962510,"results":"9","hashOfConfig":"10"},{"size":1536,"mtime":1611789332049,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611327500890,"results":"12","hashOfConfig":"10"},{"size":6176,"mtime":1611786661649,"results":"13","hashOfConfig":"10"},{"size":629,"mtime":1611369354310,"results":"14","hashOfConfig":"10"},{"size":5326,"mtime":1611766013600,"results":"15","hashOfConfig":"10"},{"size":6423,"mtime":1611785802919,"results":"16","hashOfConfig":"10"},{"size":11196,"mtime":1611795589059,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"11jsecb",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/rodrigo-sp17/react/ms-view/src/index.js",[],["38","39"],"/home/rodrigo-sp17/react/ms-view/src/App.js",["40","41","42"],"/home/rodrigo-sp17/react/ms-view/src/reportWebVitals.js",[],"/home/rodrigo-sp17/react/ms-view/src/Home.js",["43"],"import React from 'react';\nimport clsx from 'clsx';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Drawer from '@material-ui/core/Drawer';\n//import Hidden from '@material-ui/core/Hidden';\nimport { Divider, List, ListItem, ListItemIcon, ListItemText, Button } from '@material-ui/core';\nimport { Add, CalendarToday, ChevronLeft, DateRange, Event, People } from '@material-ui/icons';\n\nimport Calendar from './Calendar.js';\nimport { Link, Route, Switch } from 'react-router-dom';\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    hide: {\n        display:'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    appBar: {\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n      transition: theme.transitions.create(['margin', 'width'], {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n    drawerHeader: {\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      // necessary for content to be below app bar\n      ...theme.mixins.toolbar,\n      justifyContent: 'flex-end',\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      //marginLeft: -drawerWidth,\n    },\n    contentShift: {\n      transition: theme.transitions.create('margin', {\n        easing: theme.transitions.easing.easeOut,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      marginLeft: 0,\n    },\n  }));\n\nexport default function Home() {\n    // Title\n    // Sidebar\n    // Calendar\n    //import classes from '*.module.css';\n    const classes = useStyles();   \n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    }\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    }\n\n    return (\n        <div className='root'>\n            <AppBar \n                position=\"absolute\" \n                className={clsx(classes.appBar, open && classes.appBarShift)}\n            >\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open menu\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Calendário    \n                    </Typography>\n                    <Button\n                      variant=\"contained\"\n                      component={Link}\n                      to=\"/shift\"\n                      startIcon={<Add />}\n                    >\n                      Nova escala\n                    </Button>\n                    <IconButton color=\"inherit\" >\n                        <Badge badgeContent={0} color=\"secondary\">\n                            <NotificationsIcon />\n                        </Badge>\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"responsive\"\n                anchor=\"left\"\n                open={open}\n                className={classes.drawer}\n                classes={{\n                    paper: classes.drawerPaper\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton\n                        onClick={handleDrawerClose}\n                    >\n                        <ChevronLeft />\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <ListItem button key=\"calendar\"\n                      component={Link}\n                      to=\"/calendar\"\n                    >\n                        <ListItemIcon><CalendarToday /></ListItemIcon>\n                        <ListItemText primary=\"Calendário\"/>\n                    </ListItem>\n                    <ListItem button key=\"shifts\">\n                        <ListItemIcon><DateRange /></ListItemIcon>\n                        <ListItemText primary=\"Escalas\"/>\n                    </ListItem>\n                    <ListItem button key=\"events\">\n                        <ListItemIcon><Event /></ListItemIcon>\n                        <ListItemText primary=\"Eventos\"/>\n                    </ListItem>\n                    <ListItem button key=\"friends\">\n                        <ListItemIcon><People /></ListItemIcon>\n                        <ListItemText primary=\"Amigos\"/>\n                    </ListItem>\n                </List>\n            </Drawer>\n            <div className={classes.drawerHeader} />\n            <main className={classes.content}>\n              <Switch>\n                <Route exact path=\"/calendar\">\n                  <Calendar />                            \n                </Route>\n                <Route path=\"/shifts\">\n\n                </Route>\n                <Route path=\"/events\">\n\n                </Route>\n              </Switch>\n            </main>\n          </div>\n    );\n}","/home/rodrigo-sp17/react/ms-view/src/Calendar.js",["44"],"import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from \"@fullcalendar/interaction\"; // needed for dayClick\n\nexport default function Calendar() {\n\n    // Event handlers\n    const handleDayClick = () => {\n        // TODO: show event\n    }\n\n    // Fill calendar data with API shift requests\n\n\n    return (\n        <FullCalendar\n            plugins={[ dayGridPlugin, interactionPlugin ]}\n            initialView=\"dayGridMonth\"\n            height=\"auto\"\n            contentHeight=\"auto\"\n            locale=\"pt-br\"\n        />\n    );\n}","/home/rodrigo-sp17/react/ms-view/src/Login.js",[],"/home/rodrigo-sp17/react/ms-view/src/Signup.js",["45","46"],"import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory } from 'react-router-dom';\nimport { Button, CssBaseline, Link, makeStyles, Snackbar, TextField, Typography } from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    error: {\n        marginTop: theme.spacing(1),        \n    },\n    hide: {\n        display:'none',\n    },\n}));\n\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Signup(props) {    \n    const classes = useStyles();\n    const history = useHistory();\n\n    const[username, setUsername] = useState(\"\");\n    const[password, setPassword] = useState(\"\");\n    const[confirmPassword, setConfirmPassword] = useState(\"\");\n    const[name, setName] = useState(\"\");    \n    const[email, setEmail] = useState(\"\");\n\n    const successMsg = \"Usuário criado com sucesso!\";\n    const[errorMsg, setErrorMsg] = useState(\"\");\n    const[signupSuccess, setSuccess] = useState(false);\n    const[snack, showSnack] = useState(false);\n    \n    const sendSignup = () => {\n        const url = \"/api/user/signup\";\n        const options = {\n            method: 'POST',            \n            headers: { \n                'Content-Type': 'application/json;charset=utf-8' \n            },    \n            body: JSON.stringify({\n                \"name\": name,\n                \"email\": email,                \n                \"username\": username,\n                \"password\": password,\n                \"confirmPassword\": confirmPassword\n            })\n        };\n        \n        fetch(url, options)\n            .then(res => {\n                if (res.status === 201) {\n                    setSuccess(true);\n                    showSnack(true);\n                    setTimeout(() => { history.push('/login'); }, 2000);\n                } else {\n                    setSuccess(false);\n                    throw new Error(\"Não foi possivel criar o usuário! Tente novamente.\");\n                }                    \n            })            \n            .catch(error => {\n                if (!signupSuccess) {\n                    setErrorMsg(error.message);                    \n                } else {\n                    setErrorMsg(\"Falha ao comunicar com o servidor! Por favor, atualize o navegador e tente novamente\");\n                }              \n                showSnack(true);\n            });               \n    };\n      \n    const handleSubmit = (event) => {\n        event.preventDefault();\n        sendSignup();        \n    };    \n    \n    return(\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography variant=\"h4\">\n                    Cadastrar novo usuário\n                </Typography>\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Nome e Sobrenome\"\n                        name=\"name\"\n                        autoFocus\n                        onChange={i => setName(i.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Endereço de Email\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        onChange={i => setEmail(i.target.value)}\n                    />\n                    \n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Nome de Usuário\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        onChange={i => setUsername(i.target.value)}\n                    />\n                    <TextField \n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"password\"\n                        label=\"Senha\"\n                        name=\"password\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={i => setPassword(i.target.value)}\n                    />\n                    <TextField \n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"confirmPassword\"\n                        label=\"Confirmar Senha\"\n                        name=\"confirmPassword\"\n                        type=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={i => setConfirmPassword(i.target.value)}\n                    />                            \n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant='contained'\n                        color=\"primary\"\n                        className={classes.submit}                 \n                    >\n                        Cadastrar\n                    </Button>                    \n                </form>\n                <Snackbar open={snack} autoHideDuration={5000} onClose={() => showSnack(false)} >\n                        {signupSuccess\n                            ? <Alert severity=\"success\">{successMsg}</Alert>\n                            : <Alert severity=\"error\" >{errorMsg}</Alert>\n                        }\n                </Snackbar>\n            </div>            \n        </Container>\n    );\n}\n\n","/home/rodrigo-sp17/react/ms-view/src/Shift.js",["47","48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":3,"column":17,"nodeType":"56","messageId":"57","endLine":3,"endColumn":25},{"ruleId":"54","severity":1,"message":"58","line":10,"column":3,"nodeType":"56","messageId":"57","endLine":10,"endColumn":7},{"ruleId":"54","severity":1,"message":"59","line":17,"column":10,"nodeType":"56","messageId":"57","endLine":17,"endColumn":22},{"ruleId":"54","severity":1,"message":"60","line":7,"column":8,"nodeType":"56","messageId":"57","endLine":7,"endColumn":17},{"ruleId":"54","severity":1,"message":"61","line":9,"column":11,"nodeType":"56","messageId":"57","endLine":9,"endColumn":25},{"ruleId":"54","severity":1,"message":"62","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":12},{"ruleId":"54","severity":1,"message":"58","line":6,"column":31,"nodeType":"56","messageId":"57","endLine":6,"endColumn":35},{"ruleId":"54","severity":1,"message":"63","line":11,"column":122,"nodeType":"56","messageId":"57","endLine":11,"endColumn":130},{"ruleId":"54","severity":1,"message":"64","line":11,"column":132,"nodeType":"56","messageId":"57","endLine":11,"endColumn":135},{"ruleId":"54","severity":1,"message":"65","line":14,"column":16,"nodeType":"56","messageId":"57","endLine":14,"endColumn":21},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'PrivateRoute' is defined but never used.","'Container' is defined but never used.","'handleDayClick' is assigned a value but never used.","'Grid' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]